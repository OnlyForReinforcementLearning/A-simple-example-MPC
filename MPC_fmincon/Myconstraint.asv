function [C, geq] = Myconstraint(Np, state_follower, U, G, F, F_a)
    x_follower = zeros(3, Np + 1); % Define a predictive state
    x_follower(:, 1) = state_follower;
    for k = 1: Np % k \in [0, Np - 1]
        x_follower(:, k+1) = follower_dynamics(x_follower(:, k), U(k), G, F);
    end

    Cost_self_GG = 0;
    for i = 2:Np % k=[1,Np-1]
        Cost_self_GG = Cost_self_GG + sqrt((x_follower(:,i)-Xa(:,i))' * GG * (x_follower(:,i)-Xa(:,i)));
    end
    C = Gamma * Cost_self_GG - Cost_self_GG_last;

    geq = [];
end